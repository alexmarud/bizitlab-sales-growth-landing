
import React, { useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card";

const services = [
  {
    id: 1,
    title: "–í–Ω–µ–¥—Ä–µ–Ω–∏–µ Bitrix24 / amoCRM",
    description: "–ê–Ω–∞–ª–∏–∑ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–æ—Ä–æ–Ω–æ–∫, –æ–±—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã.",
    icon: "üìä",
    color: "bg-bizitblue/10",
    borderColor: "border-bizitblue/30"
  },
  {
    id: 2,
    title: "Telegram-–±–æ—Ç—ã –ø–æ–¥ –∫–ª—é—á",
    description: "–ó–∞–∫–∞–∑—ã, –æ–ø–æ–≤–µ—â–µ–Ω–∏—è, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CRM –∏ 1–°.",
    icon: "ü§ñ",
    color: "bg-bizitgreen/10",
    borderColor: "border-bizitgreen/30"
  },
  {
    id: 3,
    title: "–û—Ç—á—ë—Ç—ã –∏ –¥–∞—à–±–æ—Ä–¥—ã 1–°",
    description: "–õ—é–±–∞—è —Ñ–æ—Ä–º–∞, BI-–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ email.",
    icon: "üìà",
    color: "bg-bizitblue/10",
    borderColor: "border-bizitblue/30"
  },
  {
    id: 4,
    title: "–£–ø—Ä–∞–≤–ª–µ–Ω—á–µ—Å–∫–∏–π —É—á—ë—Ç –≤ 1–°",
    description: "–ü–ª–∞–Ω-—Ñ–∞–∫—Ç, –±—é–¥–∂–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å–∫–≤–æ–∑–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∑–∞—Ç—Ä–∞—Ç –∏ –º–∞—Ä–∂–∏.",
    icon: "üìã",
    color: "bg-bizitgreen/10",
    borderColor: "border-bizitgreen/30"
  }
];

const Services = () => {
  // Animation on scroll
  useEffect(() => {
    const revealElements = document.querySelectorAll('.reveal');
    
    const reveal = () => {
      revealElements.forEach((element) => {
        const windowHeight = window.innerHeight;
        const elementTop = element.getBoundingClientRect().top;
        const elementVisible = 150;
        
        if (elementTop < windowHeight - elementVisible) {
          element.classList.add('active');
        }
      });
    };
    
    window.addEventListener('scroll', reveal);
    // Trigger once to reveal elements already in view
    reveal();
    
    return () => window.removeEventListener('scroll', reveal);
  }, []);

  return (
    <section id="services" className="section bg-white">
      <div className="container mx-auto">
        <h2 className="section-title text-gradient reveal">–ù–∞—à–∏ —É—Å–ª—É–≥–∏</h2>
        <p className="section-subtitle reveal">
          –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å–∞ –∏ –ø–æ–≤—ã—à–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂
        </p>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8 mt-12">
          {services.map((service, index) => (
            <div key={service.id} className="reveal" style={{ animationDelay: `${index * 0.1}s` }}>
              <Card className={`h-full card-shadow border-2 ${service.borderColor} ${service.color} hover:bg-white transition-colors`}>
                <CardHeader>
                  <CardTitle className="flex items-center text-xl md:text-2xl font-semibold">
                    <span className="text-4xl mr-4">{service.icon}</span>
                    {service.title}
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <CardDescription className="text-gray-700 text-base">
                    {service.description}
                  </CardDescription>
                </CardContent>
              </Card>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
};

export default Services;
